<div @ref="divPanel">
    <label for="filter"><h3>Search:</h3></label>

    <input type="text" id="filter" @bind-value="searchText" @bind-value:event="oninput"
           placeholder="Type your search text"
           @ref="filterInputElementReference" />

    @* <input type="text" id="filter" @bind-value="searchText" @bind-value:event="oninput" /> *@
    <!-- <input type="text" id="filter" @bind-value="searchText" @bind-value:event="oninput" /> -->

    <button type="button" @onclick="Search" class="btn btn-primary" disabled="@CannotSearch">Search</button>

    <p>Characters count: @searchText.Length</p>
</div>

@code {
    private ElementReference filterInputElementReference;
    private ElementReference divPanel;

    private string searchText = string.Empty;

    private bool CannotSearch => searchText.Length == 0;

    [Parameter, EditorRequired]
    public required EventCallback<string> OnSearch { get; set; }

    private async Task Search()
    {
        await OnSearch.InvokeAsync(searchText);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await filterInputElementReference.FocusAsync();

        }
    }

}
